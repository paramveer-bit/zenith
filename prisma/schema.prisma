// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(cuid())
  email       String    @unique
  name        String?
  password    String
  otp         String?
  otpExpiry   DateTime?
  verified    Boolean   @default(false)
  resendCount Int       @default(0)
  lastResend  DateTime?
  secret      String?   @default(uuid())

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Request   Request[]
}

model Request {
  id           String   @id @default(cuid())
  ownerId      String
  requestUrl   String
  forwardUrl   String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  caching      Boolean  @default(false)
  cacheTime    Int?     @default(10)
  rateLimiting Boolean  @default(false)
  defaultRate  Int?
  bannedUser   String[]

  User         User           @relation(fields: [ownerId], references: [id])
  RateLimiting RateLimiting[]
  RequestLogs  RequestLog[]
}

// Sprate Rate limiting for each user of client if needed
model RateLimiting {
  id        String   @id @default(cuid())
  requestId String
  user_code String
  rate      Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Request Request @relation(fields: [requestId], references: [id])

  @@unique([user_code, requestId])
}

model RequestLog {
  id         String   @id @default(cuid())
  requestId  String   @default("no-request-id")
  requestUrl String
  forwardUrl String
  response   Json
  statusCode Int
  type       String
  comment    String?
  duration   Int
  userId     String
  browser    String?
  os         String?
  ip         String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  Request Request @relation(fields: [requestId], references: [id])
}
